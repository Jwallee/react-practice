{"ast":null,"code":"var _jsxFileName = \"/Users/grantrobinett/Coding/JavaPractice/SpeedType/react-practice/my-app/src/components/UserManager.js\";\nimport React from 'react';\nimport AppContext from './AppContext';\nimport './master.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserManager extends React.Component {\n  // Task 6\n  componentDidMount() {\n    console.log(\"UserManager.componentDidMount( )\");\n\n    // let the property in App point to this\n    // Task 7\n    let appContext = this.context;\n    appContext.userManager = this;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"UserManager.componentDidUpdate( )\");\n\n    // only do this if the ID has changed\n\n    // Task 7\n    if (prevState.userId !== this.state.userId) {\n      // calls ALL the event listeners and pass them the new user ID\n      this.idChangeListeners.forEach(listener => listener(this.state.userId));\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    // a list of objects that listen to ID change events\n    this.idChangeListeners = [];\n\n    // Task 2\n    this.state = {\n      userid: \"\",\n      userName: \"\",\n      loggedIn: false,\n      instructions: \"Please log in to comment on photos.\",\n      userIdFieldValue: \"\",\n      passwordFieldValue: \"\"\n    };\n\n    // these are necessary for \"this\" to point to this object\n    this.handleUserIdChange = this.handleUserIdChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.idChangeSubscribe = this.idChangeSubscribe.bind(this);\n    this.logIn = this.logIn.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  // Task 3\n  handleUserIdChange(event) {\n    this.setState({\n      userIdFieldValue: event.target.value\n    });\n  }\n  handlePasswordChange(event) {\n    this.setState({\n      passwordFieldValue: event.target.value\n    });\n  }\n\n  // this method is for listener to add themselves to the list so that\n  // they will get notified when the user ID has changed\n\n  // Task 7\n  idChangeSubscribe(listener) {\n    console.log(\"UserManager.idChangeSubscribe()\");\n    this.idChangeListeners.push(listener);\n    console.log(this.idChangeListeners);\n  }\n  logIn() {\n    // Task 2\n    // this.setState ({ loggedIn: true });\n\n    // Task 3\n    let userIdEntered = this.state.userIdFieldValue;\n    let passwordEntered = this.state.passwordFieldValue;\n    let successful = false;\n    let userName = \"unknown\";\n\n    // Simulated database lookup!!! We would not do this in real life!\n\n    if (userIdEntered.trim() === \"grant\" && passwordEntered.trim() === \"12345\") {\n      userName = \"Harry Kong\";\n      successful = true;\n    }\n    if (userIdEntered.trim() === \"jenny\" && passwordEntered.trim() === \"12345\") {\n      userName = \"Jenny Luz\";\n      successful = true;\n    }\n\n    // Was the log in successful?\n\n    if (successful) {\n      this.setState({\n        loggedIn: true,\n        userId: userIdEntered.trim(),\n        userName: userName,\n        instructions: \"You can now comment on photos!\"\n      }, () => {\n        this.props.logInCallback(this.state);\n      });\n    } else {\n      this.setState({\n        instructions: \"Incorrect user ID or password. Try again.\"\n      });\n    }\n  }\n  logOut() {\n    // Task 2\n    //this.setState({loggedIn: false});\n\n    // Task 3\n    this.setState({\n      instructions: \"Please log in to comment on photos.\"\n    });\n    this.setState({\n      loggedIn: false,\n      userId: \"\",\n      userName: \"\",\n      userIdFieldValue: \"\",\n      passwordFieldValue: \"\"\n    }, () => {\n      this.props.logInCallback(this.state);\n    });\n  }\n  render() {\n    // Task 2\n    if (this.state.loggedIn) {\n      // logged in\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-manager-block user-manager-block-active-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Logged in as: \", this.state.userName, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"button\",\n            type: \"button\",\n            value: \"Log Out\",\n            onClick: this.logOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), this.props.showMessageArea(this.state)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this);\n    } else {\n      // logged Out\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-manager-block user-manager-block-inactive-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"user ID:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.userIdFieldValue,\n            onChange: this.handleUserIdChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 30\n          }, this), \"\\xA0 password:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.passwordFieldValue,\n            onChange: this.handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 28\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"button\",\n            type: \"button\",\n            value: \"Log In\",\n            onClick: this.logIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), this.props.showMessageArea(this.state)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\nUserManager.contextType = AppContext;\nexport default UserManager;","map":{"version":3,"names":["React","AppContext","jsxDEV","_jsxDEV","UserManager","Component","componentDidMount","console","log","appContext","context","userManager","componentDidUpdate","prevProps","prevState","userId","state","idChangeListeners","forEach","listener","constructor","props","userid","userName","loggedIn","instructions","userIdFieldValue","passwordFieldValue","handleUserIdChange","bind","handlePasswordChange","idChangeSubscribe","logIn","logOut","event","setState","target","value","push","userIdEntered","passwordEntered","successful","trim","logInCallback","render","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","showMessageArea","onChange","contextType"],"sources":["/Users/grantrobinett/Coding/JavaPractice/SpeedType/react-practice/my-app/src/components/UserManager.js"],"sourcesContent":["import React from 'react';\nimport AppContext from './AppContext';\nimport './master.css';\n\nclass UserManager extends React.Component {\n\n  static contextType = AppContext;\n\n// Task 6\n  componentDidMount() {\n    console.log(\"UserManager.componentDidMount( )\");\n\n    // let the property in App point to this\n    // Task 7\n    let appContext = this.context;\n    appContext.userManager = this;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"UserManager.componentDidUpdate( )\");\n\n    // only do this if the ID has changed\n\n    // Task 7\n    if (prevState.userId !== this.state.userId) {\n\n      // calls ALL the event listeners and pass them the new user ID\n      this.idChangeListeners.forEach(listener => listener(this.state.userId));\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    // a list of objects that listen to ID change events\n    this.idChangeListeners = [];\n\n    // Task 2\n    this.state = {\n      userid: \"\",\n      userName: \"\",\n      loggedIn: false,\n      instructions: \"Please log in to comment on photos.\",\n      userIdFieldValue: \"\",\n      passwordFieldValue: \"\"\n    }\n\n    // these are necessary for \"this\" to point to this object\n    this.handleUserIdChange = this.handleUserIdChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.idChangeSubscribe = this.idChangeSubscribe.bind(this);\n    this.logIn = this.logIn.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  // Task 3\n  handleUserIdChange(event) {\n    this.setState({ userIdFieldValue: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ passwordFieldValue: event.target.value });\n  }\n\n  // this method is for listener to add themselves to the list so that\n  // they will get notified when the user ID has changed\n\n  // Task 7\n  idChangeSubscribe(listener) {\n    console.log(\"UserManager.idChangeSubscribe()\");\n    this.idChangeListeners.push(listener);\n    console.log(this.idChangeListeners);\n  }\n\n  logIn() {\n\n    // Task 2\n    // this.setState ({ loggedIn: true });\n\n    // Task 3\n    let userIdEntered = this.state.userIdFieldValue;\n    let passwordEntered = this.state.passwordFieldValue;\n\n    let successful = false;\n    let userName = \"unknown\";\n\n    // Simulated database lookup!!! We would not do this in real life!\n\n    if (userIdEntered.trim() === \"grant\" && passwordEntered.trim() === \"12345\") {\n      userName = \"Harry Kong\";\n      successful = true;\n    }\n\n    if (userIdEntered.trim() === \"jenny\" && passwordEntered.trim() === \"12345\") {\n      userName = \"Jenny Luz\";\n      successful = true;\n    }\n\n    // Was the log in successful?\n\n    if (successful) {\n      this.setState( { loggedIn: true, userId: userIdEntered.trim(), userName: userName, instructions: \"You can now comment on photos!\" },\n                      () => { this.props.logInCallback(this.state); } );\n    }\n    else {\n      this.setState( { instructions: \"Incorrect user ID or password. Try again.\" } );\n    }\n\n  }\n\n  logOut() {\n\n    // Task 2\n    //this.setState({loggedIn: false});\n\n    // Task 3\n    this.setState( { instructions: \"Please log in to comment on photos.\" } )\n    this.setState( { loggedIn: false, userId: \"\", userName: \"\", userIdFieldValue: \"\", passwordFieldValue: \"\" }, () => { this.props.logInCallback(this.state); } );\n  }\n\n  render() {\n    // Task 2\n    if (this.state.loggedIn) {\n        // logged in\n        return (\n          <div className=\"user-manager-block user-manager-block-active-background\">\n            <p>Logged in as: { this.state.userName }&nbsp;<input className=\"button\" type=\"button\" value=\"Log Out\" onClick={this.logOut} /></p>\n            { this.props.showMessageArea(this.state) }\n          </div>\n        );\n    }\n    else {\n        // logged Out\n        return (\n          <div className=\"user-manager-block user-manager-block-inactive-background\">\n            <p>user ID:&nbsp;<input type=\"text\" value={this.state.userIdFieldValue} onChange={this.handleUserIdChange}/>&nbsp;\n            password:&nbsp;<input type=\"text\" value={this.state.passwordFieldValue} onChange={this.handlePasswordChange}/>&nbsp;\n            <input className=\"button\" type=\"button\" value=\"Log In\" onClick={this.logIn} /></p>\n            { this.props.showMessageArea(this.state) }\n          </div>\n        );\n    }\n  }\n\n}\n\nexport default UserManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}